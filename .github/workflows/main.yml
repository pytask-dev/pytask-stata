name: main

# Automatically cancel a previous run.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - '*'

jobs:

  run-type-checking:

    name: Run tests for type-checking
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - run: uv run --group typing ty check

  run-tests:

    name: Run tests for ${{ matrix.os }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      # Unit, integration, and end-to-end tests.

      - name: Run unit tests and doctests.
        shell: bash -l {0}
        run: uv run --group test pytest -m "unit or (not integration and not end_to_end)" --cov=./ --cov-report=xml -n auto

      - name: Upload unit test coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4
        with:
          flags: unit

      - name: Run end-to-end tests.
        shell: bash -l {0}
        run: uv run --group test pytest -m end_to_end --cov=./ --cov-report=xml -n auto

      - name: Upload end_to_end test coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4
        with:
          flags: end_to_end

      - name: Run tests with lowest resolution
        if: matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'
        run: uv run --group test --resolution lowest-direct pytest -n auto

      - name: Run tests with highest resolution
        if: matrix.python-version == '3.13' && matrix.os == 'ubuntu-latest'
        run: uv run --group test --resolution highest pytest -n auto
